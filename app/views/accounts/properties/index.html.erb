<% provide(:title, t('properties.title')) %>

<%= render layout: 'layouts/breadcrumb', locals: {path: [{:title => t('properties.index.breadcrumb'), :href => properties_path}], icon: 'house-colored'} do %>
  <div class="action-btns">
    <%= link_to new_property_path, class: 'btn btn-primary btn-sm' do %>
      <i class="fas fa-plus-circle fa-fw"></i>&nbsp;<%= t('properties.new.add_button') %>
    <% end %>
  </div>
<% end %>

<div class="page-container">
  <div class="container">
    <div class="app-container">
      <%= react_component('PropertiesListWithDatatable', props: {
          initial_payload: {
              buysell_filter: {
                  options: Property.businesstypes.keys.tap(&:pop).collect {|businesstype| {label: Property.human_enum_name(:businesstype, businesstype), value: businesstype}},
                  storedOption: @initial_purpose
              },
              category_filter: {
                  options: category_options,
                  storedMasterOption: @initial_category.blank? ? nil : {label: Property.human_enum_name(:category, @initial_category), value: @initial_category},
                  storedSlaveOption: @initial_subcategory.blank? ? nil : {label: Property.human_enum_name(:subcategory, @initial_subcategory), value: @initial_subcategory}
              },
              price_filter: {
                  options: price_options,
                  storedMasterOption: @initial_pricemin.blank? ? nil : {label: number_to_currency(@initial_pricemin), value: @initial_pricemin},
                  storedSlaveOption: @initial_pricemax.blank? ? nil : {label: number_to_currency(@initial_pricemax), value: @initial_pricemax},
              },
              dataset_wrapper: @propertieslist,
              results_per_page: @results_per_page,
              total_entries: @total_entries,
              current_page: @current_page,
              initial_search: @initial_search,
              initial_sorting: @initial_sorting,
              initial_ordering: @initial_ordering,
              locations_endpoint: properties_locations_url,
              hasFeedback: false,
              object_type: 'properties'
          },
          i18n: {
              select: {
                  placeholder: t('js.components.select.placeholder_title'),
                  placeholder_plain: t('js.components.select.placeholder'),
                  placeholder_price: t('js.components.select.placeholder_all_prices'),
                  noresults: t('js.components.select.noresults'),
                  loading: t('js.components.select.loading_html'),
                  feedback: t('js.components.select.assignments_feedback'),
                  category: t('js.components.select.category')
              },
              datatable: t('js.datatables.properties'),
              search: t('js.properties_search.placeholder'),
              view: t('js.properties_view_btn'),
              edit: t('js.properties_edit_btn'),
              sorting: {
                  title: t('js.datatables.sorting.title')
              },
              price: t('js.datatables.filters.price.title'),
              priceFrom: t('js.datatables.filters.price.from'),
              priceTo: t('js.datatables.filters.price.to'),
              filters: {
                  title: t('js.datatables.filters.title'),
                  type:{
                      title: t('js.datatables.filters.type.title'),
                      sell: t('js.datatables.filters.type.sell'),
                      rent: t('js.datatables.filters.type.rent'),
                      both: t('js.datatables.filters.type.both'),
                  },
                  sortByDate: {
                      title: t('js.datatables.filters.date.title'),
                      option1: t('js.datatables.filters.date.descending'),
                      option2: t('js.datatables.filters.date.ascending'),
                  },
                  sortByPrice: {
                      title: t('js.datatables.filters.price.title'),
                      option1: t('js.datatables.filters.price.ascending'),
                      option2: t('js.datatables.filters.price.descending'),
                  },
                  filterByType: {
                      title: t('js.datatables.filters.type.title'),
                      option1: t('js.datatables.filters.type.sell'),
                      option2: t('js.datatables.filters.type.rent'),
                  }
              },
              favourites_tooltip: t('js.properties_favourites_tooltip')
          }
      }, prerender: false) %>
    </div>
  </div>
</div>


