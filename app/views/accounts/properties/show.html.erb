<% provide(:title, t('properties.show.heading')) %>

<!-- Notice the use of render layout. We need layout instead of partial so that we can pass a block -->
<%= render layout: 'layouts/breadcrumb', locals: {path: [
    {:title => t('properties.index.breadcrumb'), :href => properties_path},
    {title: @property.title || @property.id, :href => ''}], icon: 'house-colored'} do %>
  <div class="action-btns">
    <div class="btn-group btn-group-toggle">

      <div class="reactstrap-modal-button">
        <%= react_component('ModalContainer', props: {
            id: 'modal-window',
            fireButtonLabel: '<i class="fas fa-heart fa-fw"></i>&nbsp;' + t('properties.favourites'),
            avatar: @property.avatar.attached? ? url_for(@property.avatar) : nil,
            favorites_url: favorites_url,
            favlists_url: favlists_url,
            property_id: @property.id,
            modalTitle: t('properties.fav_lists'),
            modalHeader: heading,
            buttonOKLabel: t('properties.ok_button'),
            buttonCancelLabel: t('properties.cancel_button'),
            buttonCloseLabel: t('properties.close_button'),
            soloMode: true,
            ajaxEnabled: false,
            isClearable: true,
            backspaceRemovesValue: true,
            isSearchable: false,
            feedback: t('js.forms.properties.wizard.step1.type_of_offer_feedback'),
            i18n: {
                no_lists_available: t('js.components.modal.favlists.no_results'),
                property_cover_alt: t('js.components.modal.favlists.property_cover_alt'),
                add_list_action: t('js.components.modal.favlists.add_list_action'),
                loading_alt: t('js.components.modal.favlists.loading_alt'),
                listname_placeholder: t('js.components.modal.favlists.listname_placeholder')
            }
        }, prerender: false) %>
      </div>

      <%= link_to edit_property_path(@property), class: 'btn btn-secondary btn-sm editable' do %>
        <i class="fas fa-pen fa-fw"></i>&nbsp;<%= t 'properties.edit.edit_button_alt' %>
      <% end %>

      <button type="button" class="btn btn-secondary btn-sm printable" data-url="<%= @property.map_href %>" <%= @property.map_href.blank? ? 'disabled' : nil %>>
        <i class="fas fa-map fa-fw"></i>&nbsp;<%= t 'properties.map' %>
      </button>

      <button type="button" class="btn btn-secondary btn-sm printable" data-url="<%= property_url(@property.id) + '?print=true' %>">
        <i class="fas fa-print fa-fw"></i>&nbsp;<%= t 'properties.print' %>
      </button>
    </div>
  </div>
<% end %>

<div class="page-container">
  <div class="container">
    <!-- .card -->
    <div class="card ">

      <%= render partial: 'shared/card_header/header', locals: {title: heading, btn_text: t('properties.show.catalog'), btn_link: properties_path} %>

      <!-- .card-body -->
      <div class="card-body">

        <div class="row">
          <div class="col-lg-7 col-md-12 my-auto">
            <% if @property.images.blank? %>
              <div class="d-flex flex-wrap justify-content-center">
                <%= content_tag :i, "", class: "pr-icon lg house-avatar-placeholder" %>
              </div>

            <% else %>
              <div class="thumbnails-ribbon d-flex flex-wrap justify-content-center">
                <div class="fotorama" data-nav="thumbs" data-maxheight="500" data-allowfullscreen="true">
                  <!--                <div class="fotorama" data-nav="thumbs" data-width="900" data-height="300" data-allowfullscreen="true">-->
                  <% @property.all_images.each do |image| %>
                    <%#= image_tag image.variant(resize: "736x500") %>
                    <%= image_tag image %>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>

          <div class="col-lg-5 col-md-12">


            <div class="card">
              <div class="card-header">
                <div class="table-entry">
                  <div class="table-icon-wrapper">
                    <i class="pr-icon xs info"></i>
                  </div>
                  <span class="align-middle">&nbsp; <%= t 'activerecord.attributes.property.info_title' %> </span>
                </div>
              </div><!-- .card-body -->
              <div class="card-body">
                <div class="table-responsive">
                  <!-- .table -->
                  <table class="table table-striped">
                    <tbody>
                    <tr>
                      <td><%= t('activerecord.attributes.property.location') %></td>
                      <td><span><%= @property.location.localname %></span></td>
                    </tr>
                    <tr>
                      <td><%= t('activerecord.attributes.property.price_title') %></td>
                      <td><span><%= @property.price ? number_to_currency(@property.price) : '—' %></span></td>
                    </tr>
                    <tr>
                      <td><%= t('activerecord.attributes.property.pricepersqmeter') %></td>
                      <td>
                        <span><%= @property.pricepersqmeter ? number_to_currency(@property.pricepersqmeter) : '—' %></span>
                      </td>
                    </tr>
                    <tr>
                      <td><%= t('activerecord.attributes.property.size_title') %></td>
                      <td>
                        <span><%= @property.size ? t('activerecord.attributes.property.size_meter_html', size: @property.size.to_s) : '—' %></span>
                      </td>
                    </tr>
                    <tr>
                      <td><%= t('activerecord.attributes.property.businesstype_plain') %></td>
                      <td>
                        <span><%= t("activerecord.attributes.property.enums.subcategory.#{@property.subcategory.to_s}") %></span>
                      </td>
                    </tr>
                    <tr>
                      <td><%= t('activerecord.attributes.property.enums.businesstype.title') %></td>
                      <td>
                        <mark class="highlighted">
                          <span><%= t("activerecord.attributes.property.enums.businesstype.#{@property.businesstype.to_s}") %></span>
                        </mark>
                      </td>
                    </tr>
                    <tr>
                      <td><%= t('activerecord.attributes.user.phone1') %></td>
                      <td>
                        <span><%= @property.try(:owner).try(:telephones).blank? ? '—' : @property.owner.telephones.split(/[\s,]+/).collect(&:strip).join(', ') %></span>
                      </td>
                    </tr>
                    </tbody>
                  </table>
                </div>
              </div><!-- /.card-body -->
            </div><!-- /.card -->


          </div>
        </div>

        <hr/>

        <% content_for :action_buttons do %>

        <% end %>

        <div class="row">
          <div class="col-lg-6 col-xs-12">

            <div class="col-12">

              <div class="card">
                <div class="card-header">
                  <div class="table-entry">
                    <div class="table-icon-wrapper">
                      <i class="pr-icon xs specs"></i>
                    </div>
                    <span class="align-middle">&nbsp; <%= t 'activerecord.attributes.property.specs_title' %> </span>
                  </div>
                </div><!-- .card-body -->
                <div class="card-body">
                  <%= render partial: 'accounts/properties/specs' %>
                </div><!-- /.card-body -->
              </div><!-- /.card -->


            </div>
            <div class="col-12">
              <div class="card">
                <div class="card-header">
                  <div class="table-entry">
                    <div class="table-icon-wrapper">
                      <i class="pr-icon xs notes"></i>
                    </div>
                    <span class="align-middle">&nbsp; <%= t 'activerecord.attributes.property.notes_title' %> </span>
                  </div>
                </div><!-- .card-body -->
                <div class="card-body">
                  <% if @property.notes.blank? %>
                    <h3><%= t('activerecord.attributes.property.extras_not_found') %></h3>
                  <% else %>
                    <div><%= @property.notes %></div>
                  <% end %>
                </div><!-- /.card-body -->
              </div><!-- /.card -->

            </div>

          </div>
          <div class="col-lg-6 col-xs-12">


            <div class="col-12">
              <div class="card">

                <div class="card-header">
                  <div class="table-entry">
                    <div class="table-icon-wrapper">
                      <i class="pr-icon xs list"></i>
                    </div>
                    <span class="align-middle">&nbsp; <%= t 'activerecord.attributes.property.extras_title' %></span>
                  </div>
                </div><!-- .card-body -->
                <div class="card-body">
                  <% if @property.extras.blank? %>
                    <h3><%= t('activerecord.attributes.property.extras_not_found') %></h3>
                  <% else %>
                    <%= render partial: 'accounts/properties/extras' %>
                  <% end %>
                </div><!-- /.card-body -->
              </div><!-- /.card -->
            </div>
            <div class="col-12">
              <div class="card">

                <div class="card-header">
                  <div class="table-entry">
                    <div class="table-icon-wrapper">
                      <i class="pr-icon xs assignments"></i>
                    </div>
                    <span class="align-middle">&nbsp; <%= t 'activerecord.attributes.property.assignments_title' %></span>
                  </div>
                </div><!-- .card-body -->
                <div class="card-body">
                  <div class="col-12 pt-2">
                    <%= react_component('MultiAsyncSelect', props: {
                        id: 'MultiAsyncSelect',
                        retrieve_endpoint: users_path,
                        assign_endpoint: assignments_path(@property.id),
                        className: '',
                        # storedOptions: @property.owner.id ? {"label": "#{@property.owner.first_name} #{@property.owner.last_name}", "value": @property.owner.id} : nil,
                        storedOptions: @property.users.blank? ? nil : @property.users.map {|user| {label: "#{user.first_name} #{user.last_name}", value: user.id}},
                        isSearchable: true,
                        isClearable: true,
                        soloMode: true,
                        ajaxEnabled: true,
                        feedback: t('js.components.select.assignments_feedback'),
                        i18n: {
                            select: t('js.components.select'),
                            validatorErrMsg: t('js.validator.required'),
                        }
                    }, prerender: false) %>

                  </div>
                </div><!-- /.card-body -->
              </div><!-- /.card -->
            </div>


          </div>
        </div>

      </div>
    </div>
  </div>
</div>



