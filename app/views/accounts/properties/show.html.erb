<% provide(:title, t('properties.show.heading')) %>

<%= render partial: 'shared/breadcrumb', locals: {path: [{:title => 'properties.show.properties', :href => properties_path}, {title: @property.title || @property.id, :href => ''}], icon: 'house-colored'} %>


<div class="page-container">
  <div class="container">
    <!-- .card -->
    <div class="card card-fluid">
      <h2 class="card-header"> <%= @property.description %> </h2>
      <!-- .card-body -->
      <div class="card-body">

        <div class="row">
        <div class="col-lg-6 col-md-12">
          <div class="thumbnails-ribbon d-flex flex-wrap justify-content-center">
            <div class="fotorama" data-nav="thumbs" data-allowfullscreen="true">
              <% @property.images.each do |image| %>
                <%= image_tag image %>
              <% end %>
            </div>
          </div>
        </div>

        <div class="col-lg-6 col-md-12">
          <div class="table-responsive">
            <!-- .table -->
            <table class="table table-striped">
              <tbody>
              <tr>
                <td><%= t('activerecord.attributes.property.location') %></td>
                <td><%= @property.location.localname %></td>
              </tr>
              <tr>
                <td><%= t('activerecord.attributes.property.price_title') %></td>
                <td><%= @property.price ? @property.price : '—' %></td>
              </tr>
              <tr>
                <td><%= t('activerecord.attributes.property.pricepersqmeter') %></td>
                <td><%= @property.pricepersqmeter ? @property.pricepersqmeter : '—' %></td>
              </tr>
              <tr>
                <td><%= t('activerecord.attributes.property.businesstype_plain') %></td>
                <td><%= t("activerecord.attributes.property.enums.subcategory.#{@property.subcategory.to_s}") %></td>
              </tr>
              <tr>
                <td><%= t('activerecord.attributes.extra.heating.title') %></td>
                <td><%= 'Κεντρική' %></td>
              </tr>
              </tbody>
            </table>
          </div>

        </div>
        </div>


<!--          <div class="media mb-3">-->
<!--            <div class="user-avatar user-avatar-xl property-avatar-xl fileinput-button">-->
<!--              <div id="avatar-wrapper">-->

              <%#= render_avatar(@property, "alphatar-edit property-alphatar", "avatar_preview") %>
<!--              </div>-->
<!--            </div>-->
<!--            <div class="media-body pl-3 pt-3">-->
<!--              <strong><%#= @property.title %></strong><br>-->
<!--              <span><%#= @property.description ? @property.description : '—' %></span>-->
<!--            </div>-->
<!--          </div>-->


<!--        <div class="col-lg-6 offset-lg-3 col-md-12">-->
<!--          <div class="metric-row">-->

<!--            <div class="col-6 col-sm-6 col-lg-6">-->


<!--              <div class="card-metric">-->
<!--                <div class="metric">-->
<!--                  <p class="metric-value h3">-->
<!--                    <sub><i class="fa fa-tasks fa-lg fa-fw"></i></sub> <span class="value"><%#= @property.assignments.count %></span>-->

<!--                  </p>-->
<!--                  <h2 class="metric-label"><%#= t('users.show.assignments') %></h2>-->
<!--                </div>-->
<!--              </div>-->
<!--            </div>-->

<!--            <div class="col-6 col-sm-6 col-lg-6">-->

<!--              <div class="card-metric">-->
<!--                <div class="metric">-->
<!--                  <p class="metric-value h3">-->
<!--                    <sub><i class="fa fa-check fa-lg fa-fw"></i></sub> <span class="value">N/A</span>-->
<!--                  </p>-->
<!--                  <h2 class="metric-label"><%#= t('users.show.processed') %></h2>-->
<!--                </div>-->
<!--              </div>-->

<!--            </div>-->

<!--          </div>-->
<!--        </div>-->
      </div>
    </div>
  </div>
</div>



















      <%= react_component('UsersListAssignableWithDatatable', props: {
          initial_payload: {
              dataset_wrapper: @userslist,
              results_per_page: @results_per_page,
              total_entries: @total_entries,
              current_page: @current_page,
              initial_search: @initial_search,
              initial_sorting: @initial_sorting,
              initial_ordering: @initial_ordering,
              # property_users means to get the users
              # plus the assigned status of each one
              # from the properties controller
              object_type: 'property_users',
              pid: @property.id
          },
          i18n: {
              datatable: t('js.datatables.properties'),
              search: t('js.properties_search')
          }
      }, prerender: false) %>



      <%= link_to 'Edit', edit_property_path(@property) %> |
      <%= link_to 'Back', properties_path %>



