<% provide(:title, t('properties.new.heading')) %>

<%= render partial: 'layouts/breadcrumb', locals: { path: [{ :title => t('properties.new.breadcrumb'), :href => properties_path }, { :title => t('properties.new.heading_alt'), :href => '' }], icon: 'house-colored' } %>

<%= content_tag :div, class: "", id: "alerts", data: {
    i18n: {
        alerts: t('js.alerts'),
    }
} do %>
<% end %>

<div class="page-container">
  <div class="container">
    <div class="app-container">
      <div class="content-swap">
        <!-- Default Steps -->
        <!-- .bs-stepper -->
        <div id="stepper" class="bs-stepper">
          <!-- .card -->
          <div class="card">
            <!-- .card-header -->
            <div class="hide-xs card-header">
              <!-- .steps -->
              <div class="steps steps-" role="tablist">
                <ul>
                  <li class="step" data-fieldset="fieldset-1" data-target="#test-l-1">
                    <a href="#" class="step-trigger" tabindex="-1"><span class="step-indicator step-indicator-icon"><i class="fas fa-sign fa-fw"> </i></span>
                      <span class="d-none d-lg-inline"><%= t('js.forms.properties.wizard.step1.anchor') %></span></a>
                  </li>
                  <li class="step" data-fieldset="fieldset-2" data-target="#test-l-2">
                    <a href="#" class="step-trigger" tabindex="-1"><span class="step-indicator step-indicator-icon"><i class="fas fa-info fa-fw"> </i></span>
                      <span class="d-none d-lg-inline"><%= t('js.forms.properties.wizard.step2.anchor') %></span></a>
                  </li>
                  <li class="step" data-fieldset="fieldset-3" data-target="#test-l-3">
                    <a href="#" class="step-trigger" tabindex="-1"><span class="step-indicator step-indicator-icon"><i class="fas fa-plus fa-fw"> </i></span>
                      <span class="d-none d-lg-inline"><%= t('js.forms.properties.wizard.step3.anchor') %></span></a>
                  </li>
                  <li class="step" data-fieldset="fieldset-4" data-target="#test-l-4">
                    <a href="#" class="step-trigger" tabindex="-1"><span class="step-indicator step-indicator-icon"><i class="fas fa-map-marker-alt fa-fw"> </i></span>
                      <span class="d-none d-lg-inline"><%= t('js.forms.properties.wizard.step4.anchor') %></span></a>
                  </li>
                  <li class="step" data-fieldset="fieldset-5" data-target="#test-l-5">
                    <a href="#" class="step-trigger" tabindex="-1"><span class="step-indicator step-indicator-icon"><i class="fas fa-user fa-fw"> </i></span>
                      <span class="d-none d-lg-inline"><%= t('js.forms.properties.wizard.step5.anchor') %></span></a>
                  </li>
                  <% if @property.custom_fields_count > 0 %>
                    <li class="step" data-fieldset="fieldset-6" data-target="#test-l-6">
                      <a href="#" class="step-trigger" tabindex="-1"><span class="step-indicator step-indicator-icon"><i class="fas fa-clipboard-list fa-fw"> </i></span>
                        <span class="d-none d-lg-inline"><%= t('js.forms.properties.wizard.step7.anchor') %></span></a>
                    </li>
                  <% end %>
                  <li class="step" data-fieldset="fieldset-<%= @property.custom_fields_count > 0 ? '7' : '6' %>" data-target="#test-l-<%= @property.custom_fields_count > 0 ? '7' : '6' %>">
                    <a href="#" class="step-trigger" tabindex="-1"><span class="step-indicator step-indicator-icon"><i class="fas fa-images fa-fw"> </i></span>
                      <span class="d-none d-lg-inline"><%= t('js.forms.properties.wizard.step6.anchor') %></span></a>
                  </li>
                </ul>
              </div><!-- /.steps -->
            </div><!-- /.card-header -->
            <!-- .card-body -->
            <div class="card-body">
              <div class="form-container">
                <!-- The form's validatable class is used by the custom_fields.js which basically validates dynamically imported form fields -->
                <%= form_for(@property, remote: true, html: { class: "p-lg-4 p-sm-3 p-0 validatable", id: "new_property", name: "stepperForm", 'data-parsley-excluded': "[disabled]", 'data-validate-all': 0 }) do |property| %>

                  <!-- Step 1 START -->
                  <div id="test-l-1" class="content dstepper-none fade">
                    <!-- fieldset -->
                    <fieldset>
                      <div class="row">
                        <div class="col-md-6 col-sm-12">
                          <legend class="property-add-edit-title"><%= t('js.forms.properties.wizard.step1.title') %></legend> <!-- .form-group -->
                          <div class="form-group mb-4">
                            <%= property.label :businesstype do %>
                              <%= Property.human_attribute_name(:businesstype) %>
                              <abbr title="<%= t('js.components.select.required') %>">*</abbr>
                            <% end %>
                            <%= react_component('FormSelect', props: {
                                id: 'a',
                                inputID: 'property_businesstype',
                                inputName: 'property[businesstype]',
                                inputClassName: 'form-control',
                                validatorGroup: 'fieldset-1',
                                isRequired: true,
                                renderFormField: true,
                                formID: 'new_property',
                                className: 'simple-select',
                                options: Property.businesstypes.keys.collect { |businesstype| { label: Property.human_enum_name(:businesstype, businesstype), value: businesstype } },
                                soloMode: true,
                                ajaxEnabled: false,
                                isClearable: true,
                                backspaceRemovesValue: true,
                                isSearchable: false,
                                feedback: t('js.forms.properties.wizard.step1.type_of_offer_feedback'),
                                i18n: {
                                    select: t('js.components.select'),
                                    validatorErrMsg: t('js.validator.required'),
                                }
                            }, prerender: false) %>
                          </div><!-- /.form-group -->
                          <!-- .form-group -->

                          <!-- AssociativeFormSelect will generate the form-group div and label tags automatically (nested) -->
                          <%= react_component('AssociativeFormSelect', props: {
                              id: 'b',
                              className: 'simple-select',
                              options: category_options,
                              validatorGroup: 'fieldset-1',
                              isRequired: true,
                              isSearchable: false,
                              isClearable: true,
                              renderFormFields: true,
                              formdata: {
                                  formid: 'new_property',
                                  categoryid: 'property_category',
                                  categoryname: 'property[category]',
                                  categoryClassName: 'form-control',
                                  categoryFeedback: t('js.forms.properties.wizard.step1.type_of_category_feedback'),
                                  subcategoryid: 'property_subcategory',
                                  subcategoryname: 'property[subcategory]',
                                  subcategoryClassName: 'form-control',
                                  subcategoryFeedback: t('js.forms.properties.wizard.step1.type_of_subcategory_feedback'),
                              },
                              i18n: {
                                  select: t('js.components.select'),
                                  validatorErrMsg: t('js.validator.required'),
                              }
                          }, prerender: false) %>

                        </div>

                        <div class="col-md-6 col-sm-12">
                          <div class="d-flex justify-content-center">
                            <i class="pr-icon xl house-add"> </i>
                          </div>
                        </div>
                      </div>

                      <div class="row">
                        <div class="col-md-12">
                          <hr class="mt-5">
                          <!-- .d-flex -->
                          <div class="d-flex">
                            <button type="button" class="next btn btn-primary ml-auto" data-validate="fieldset-1"><%= t('js.forms.properties.wizard.next') %></button>
                          </div><!-- /.d-flex -->
                        </div>
                      </div>

                    </fieldset><!-- /fieldset -->
                  </div><!-- Step 1 END -->


                  <!-- Step 2 START -->
                  <div id="test-l-2" class="content dstepper-none fade">
                    <!-- fieldset -->
                    <fieldset>

                      <div class="row">
                        <div class="col-12">
                          <legend class="property-add-edit-title"><%= t('js.forms.properties.wizard.step2.title') %></legend> <!-- .row -->
                        </div>
                        <!-- grid column -->

                        <!-- Price -->
                        <div class="col-md-6 col-sm-12 form-field-container price">
                          <div class="form-group mb-4">
                            <div class="form-label-group">
                              <%= property.text_field :price,
                                                      class: 'form-control',
                                                      autocomplete: "off",
                                                      'data-parsley-required': "true",
                                                      'data-parsley-group': "fieldset-2",
                                                      'data-parsley-type': "integer",
                                                      'data-parsley-type-message': t("js.validator.digits"),
                                                      'data-parsley-required-message': t("js.validator.required") %>
                              <label for="bedrooms">
                                <%= content_tag :span do %>
                                  <% if current_account.greek? %>
                                    <%= content_tag(:i, nil, class: 'fas fa-euro-sign fa-fw') + ' ' + t('activerecord.attributes.property.price_title') %>
                                  <% else %>
                                    <%= content_tag(:i, nil, class: 'fas fa-dollar-sign fa-fw') + ' ' + t('activerecord.attributes.property.price_title') %>
                                  <% end %>
                                <% end %>
                              </label>
                            </div>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.price_feedback_html') %>
                            </small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>

                        <!-- Size -->
                        <div class="col-md-6 col-sm-12 form-field-container size">
                          <div class="form-group mb-4">
                            <div class="form-label-group">
                              <%= property.text_field :size,
                                                      class: 'form-control',
                                                      autocomplete: "off",
                                                      'data-parsley-required': "true",
                                                      'data-parsley-group': "fieldset-2",
                                                      'data-parsley-type': "integer",
                                                      'data-parsley-type-message': t("js.validator.digits"),
                                                      'data-parsley-required-message': t("js.validator.required") %>
                              <label for="size">
                                <%= content_tag :span do %>
                                  <%= content_tag(:i, nil, class: 'fas fa-arrows-alt fa-fw') + ' ' + t('activerecord.attributes.property.size_title') %>
                                <% end %>
                              </label>
                            </div>
                            <% if current_account.greek? %>
                              <small class="form-text text-muted"><%= t('activerecord.attributes.property.size_meter_feedback_html') %></small>
                            <% else %>
                              <small class="form-text text-muted"><%= t('activerecord.attributes.property.size_feet_feedback_html') %></small>
                            <% end %>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>

                        <!-- Bedrooms -->
                        <div class="col-md-6 col-sm-12 form-field-container bedrooms">
                          <div class="form-group mb-4">
                            <div class="form-label-group">
                              <%= property.text_field :bedrooms,
                                                      class: 'form-control',
                                                      autocomplete: "off",
                                                      'data-parsley-required': "true",
                                                      'data-parsley-group': "fieldset-2",
                                                      'data-parsley-type': "integer",
                                                      'data-parsley-type-message': t("js.validator.digits"),
                                                      'data-parsley-required-message': t("js.validator.required") %>
                              <label for="bedrooms">
                                <%= content_tag :span do %>
                                  <%= content_tag(:i, nil, class: 'fas fa-bed fa-fw') + ' ' + t('activerecord.attributes.property.bedrooms_title') %>
                                <% end %>
                              </label>
                            </div>

                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.bedrooms_feedback_html') %></small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>

                        <!-- Bathrooms -->
                        <div class="col-md-6 col-sm-12 form-field-container bathrooms">
                          <div class="form-group mb-4">
                            <div class="form-label-group">
                              <%= property.text_field :bathrooms,
                                                      class: 'form-control',
                                                      autocomplete: "off",
                                                      'data-parsley-group': "fieldset-2",
                                                      'data-parsley-type': "integer",
                                                      'data-parsley-type-message': t("js.validator.digits"),
                                                      'data-parsley-required-message': t("js.validator.required") %>
                              <label for="bathrooms">
                                <%= content_tag :span do %>
                                  <%= content_tag(:i, nil, class: 'fas fa-bath fa-fw') + ' ' + t('activerecord.attributes.property.bathrooms_title') %>
                                <% end %>
                              </label>
                            </div>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.bathrooms_feedback_html') %>
                            </small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div>

                      <div class="row">
                        <!-- Floor -->
                        <div class="col-md-6 col-sm-12 form-field-container floor">
                          <div class="form-group mb-4">
                            <%= property.label :floor do %>
                              <span><i class="fas fa-arrows-alt-v fa-fw"></i></span>&nbsp;<%= Property.human_attribute_name(:floor) %>
                            <% end %>
                            <%= react_component('FormSelect', props: {
                                id: 'c',
                                inputID: 'property_floor',
                                inputName: 'property[floor]',
                                inputClassName: 'form-control',
                                validatorGroup: 'fieldset-2',
                                isRequired: false,
                                renderFormField: true,
                                formID: 'new_property',
                                className: 'simple-select',
                                options: Property.floors.keys.collect { |floor| { label: I18n.t("activerecord.attributes.property.enums.floor.#{floor}", :default => floor.to_s), value: floor } },
                                soloMode: true,
                                ajaxEnabled: false,
                                isClearable: true,
                                backspaceRemovesValue: true,
                                searchable: true,
                                feedback: t('js.forms.properties.wizard.step1.floor_feedback'),
                                i18n: {
                                    select: t('js.components.select'),
                                    validatorErrMsg: t('js.validator.required'),
                                }
                            }, prerender: false) %>
                          </div>
                        </div>

                        <!-- Levels -->
                        <div class="col-md-6 col-sm-12 form-field-container levels">
                          <div class="form-group mb-4">
                            <%= property.label :levels do %>
                              <%= Property.human_attribute_name(:levels) %>
                            <% end %>
                            <%= react_component('FormSelect', props: {
                              id: 'e',
                              inputID: 'property_levels',
                              inputName: 'property[levels]',
                              inputClassName: 'form-control',
                              validatorGroup: 'fieldset-2',
                              isRequired: false,
                              renderFormField: true,
                              formID: 'new_property',
                              className: 'simple-select',
                              options: (1..10).collect { |level| { label: level, value: level } },
                              soloMode: true,
                              ajaxEnabled: false,
                              isClearable: true,
                              backspaceRemovesValue: true,
                              searchable: false,
                              feedback: t('js.forms.properties.wizard.step1.levels_feedback'),
                              i18n: {
                                select: t('js.components.select'),
                                validatorErrMsg: t('js.validator.required'),
                              }
                            }, prerender: false) %>
                          </div>
                        </div>

                        <!-- Construction -->
                        <div class="col-md-6 col-sm-12 form-field-container construction">
                          <div class="form-group mb-4">
                            <%= property.label :construction do %>
                              <span><i class="fas fa-calendar-day fa-fw"></i></span>&nbsp;<%= Property.human_attribute_name(:construction) %>
                            <% end %>
                            <%= react_component('FormSelect', props: {
                                id: 'd',
                                inputID: 'property_construction',
                                inputName: 'property[construction]',
                                inputClassName: 'form-control',
                                validatorGroup: 'fieldset-2',
                                isRequired: false,
                                renderFormField: true,
                                formID: 'new_property',
                                className: 'simple-select',
                                options: (1940..Time.zone.now.year + 2).collect { |year| { label: year, value: year } },
                                soloMode: true,
                                ajaxEnabled: false,
                                isClearable: true,
                                backspaceRemovesValue: true,
                                searchable: true,
                                feedback: t('js.forms.properties.wizard.step1.construction_feedback'),
                                i18n: {
                                    select: t('js.components.select'),
                                    validatorErrMsg: t('js.validator.required'),
                                }
                            }, prerender: false) %>
                          </div>
                        </div>

                        <!-- Renovation -->
                        <div class="col-md-6 col-sm-12 form-field-container renovation">
                          <div class="form-group mb-4">
                            <%= property.label :renovation do %>
                              <span><i class="fas fa-calendar-day fa-fw"></i></span>&nbsp;<%= Property.human_attribute_name(:renovation) %>
                            <% end %>
                            <%= react_component('FormSelect', props: {
                              id: 'd',
                              inputID: 'property_renovation',
                              inputName: 'property[renovation]',
                              inputClassName: 'form-control',
                              validatorGroup: 'fieldset-2',
                              isRequired: false,
                              renderFormField: true,
                              formID: 'new_property',
                              className: 'simple-select',
                              options: (1940..Time.zone.now.year + 2).collect { |year| { label: year, value: year } },
                              soloMode: true,
                              ajaxEnabled: false,
                              isClearable: true,
                              backspaceRemovesValue: true,
                              searchable: true,
                              feedback: t('js.forms.properties.wizard.step1.renovation_feedback'),
                              i18n: {
                                select: t('js.components.select'),
                                validatorErrMsg: t('js.validator.required'),
                              }
                            }, prerender: false) %>
                          </div>
                        </div>
                      </div>

                      <div class="row">

                        <!-- Facade length -->
                        <div class="col-md-6 col-sm-12 form-field-container facade_length">
                          <div class="form-group mb-4">
                            <div class="form-label-group">
                              <%= property.text_field :facade_length,
                                                      class: 'form-control',
                                                      autocomplete: "off",
                                                      'data-parsley-group': "fieldset-2",
                                                      'data-parsley-type': "integer",
                                                      'data-parsley-type-message': t("js.validator.digits") %>
                              <label for="facade_length">
                                <%= content_tag :span do %>
                                  <%= content_tag(:i, nil, class: 'fas fa-arrows-alt-h fa-fw') + ' ' + t('activerecord.attributes.property.facade_length') %>
                                <% end %>
                              </label>
                            </div>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.facade_length_feedback_html') %>
                            </small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>

                        <!-- Distance from sea -->
                        <div class="col-md-6 col-sm-12 form-field-container distance_from_sea">
                          <div class="form-group mb-4">
                            <div class="form-label-group">
                              <%= property.text_field :distance_from_sea,
                                                      class: 'form-control',
                                                      autocomplete: "off",
                                                      'data-parsley-group': "fieldset-2",
                                                      'data-parsley-type': "integer",
                                                      'data-parsley-type-message': t("js.validator.digits") %>
                              <label for="distance_from_sea">
                                <%= content_tag :span do %>
                                  <%= content_tag(:i, nil, class: 'fas fa-walking fa-fw') + ' ' + t('activerecord.attributes.property.distance_from_sea') %>
                                <% end %>
                              </label>
                            </div>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.distance_from_sea_feedback_html') %>
                            </small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>

                        <!-- Building coefficient -->
                        <div class="col-md-6 col-sm-12 form-field-container building_coefficient">
                          <div class="form-group mb-4">
                            <div class="form-label-group">
                              <%= property.text_field :building_coefficient,
                                                      class: 'form-control',
                                                      autocomplete: "off",
                                                      'data-parsley-group': "fieldset-2",
                                                      'data-parsley-type': "number",
                                                      'data-parsley-type-message': t("js.validator.numbers") %>
                              <label for="building_coefficient">
                                <%= content_tag :span do %>
                                  <%= content_tag(:i, nil, class: 'fas fa-calculator fa-fw') + ' ' + t('activerecord.attributes.property.building_coefficient') %>
                                <% end %>
                              </label>
                            </div>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.building_coefficient_feedback_html') %>
                            </small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>

                        <!-- Coverage ratio -->
                        <div class="col-md-6 col-sm-12 form-field-container coverage_ratio">
                          <div class="form-group mb-4">
                            <div class="form-label-group">
                              <%= property.text_field :coverage_ratio,
                                                      class: 'form-control',
                                                      autocomplete: "off",
                                                      'data-parsley-group': "fieldset-2",
                                                      'data-parsley-type': "integer",
                                                      'data-parsley-type-message': t("js.validator.digits") %>
                              <label for="coverage_ratio">
                                <%= content_tag :span do %>
                                  <%= content_tag(:i, nil, class: 'fas fa-percentage fa-fw') + ' ' + t('activerecord.attributes.property.coverage_ratio') %>
                                <% end %>
                              </label>
                            </div>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.coverage_ratio_feedback_html') %>
                            </small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>

                        <!-- Availability -->
                        <div class="col-md-6 col-sm-12 form-field-container availability">
                          <div class="form-group mb-4">
                            <%= property.label :availability, t('activerecord.attributes.property.availability_title'), class: 'control-label' %>
                            <%= property.text_field :availability, class: 'form-control', :data => { :toggle => 'flatpickr' } %>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.availability_feedback_html') %></small>
                          </div><!-- /.form-group -->
                        </div>

                        <!-- Energy cert -->
                        <div class="col-md-6 col-sm-12 form-field-container energy_cert">
                          <div class="form-group mb-4">
                            <div class="custom-control custom-checkbox app-checkbox">
                              <div>
                                <%= property.check_box :has_energy_cert, class: 'custom-control-input dependent_check' %>
                                <%= property.label :has_energy_cert, class: 'custom-control-label dependent_label' do %>
                                  <%= t("activerecord.attributes.property.energy_cert_title") %>
                                <% end %>
                              </div>
                              <div class="mt-1">
                                <%= property.select :energy_cert, Property.energy_certs.keys.collect { |energy_cert| [ Property.human_enum_name(:energy_cert, energy_cert), energy_cert ] }, {}, {class: 'form-control custom-control-label custom-select dependent_input'} %>
                              </div>
                            </div>
                          </div><!-- /.form-group -->
                        </div> <!-- /Energy cert -->

                        <% if current_account.international? %>
                          <!-- Unit -->
                          <div class="col-md-6 col-sm-12 form-field-container unit">
                            <div class="form-group mb-4">
                              <div class="form-label-group">
                                <%= property.text_field :unit,
                                                        class: 'form-control',
                                                        autocomplete: "off" %>
                                <label for="unit">
                                  <%= content_tag :span do %>
                                    <%= content_tag(:i, nil, class: 'fas fa-hashtag fa-fw') + ' ' + t('activerecord.attributes.property.unit_title') %>
                                  <% end %>
                                </label>
                              </div>
                              <small class="form-text text-muted"><%= t('activerecord.attributes.property.unit_feedback_html') %>
                              </small>
                              <div class="invalid-feedback"></div>
                            </div>
                          </div>
                        <% end %>
                      </div>
                      <!-- /.row -->

                      <div class="row">
                        <!-- Description -->
                        <div class="col-md-12 form-field-container description">
                          <div class="form-group mb-4">
                            <%= property.label :description do %>
                              <span><%= t('activerecord.attributes.property.description_title') %></span>&nbsp;
                              <span class="property-cover-popover"
                                    data-toggle="popover"
                                    data-placement="top"
                                    data-trigger="hover"
                                    data-content="<%= t('properties.popover_description_body') %>"
                                    title="<%= t('properties.popover_description_title') %>">
                                <i class="fas fa-info-circle"></i>
                              </span>
                            <% end %>
                            <%= property.text_area :description,
                                                   class: 'form-control',
                                                   id: 'description',
                                                   autocomplete: 'off',
                                                   'rows': '5' %>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.description_feedback_html') %>
                            </small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div><!-- /.row -->

                      <% if current_account.greek? %>
                        <div class="row">
                          <!-- Description (English)-->
                          <div class="col-md-12 form-field-container description">
                            <%= property.label :description_en do %>
                              <span><%= t('activerecord.attributes.property.description_en_title') %></span>&nbsp;
                              <span class="property-cover-popover"
                                    data-toggle="popover"
                                    data-placement="top"
                                    data-trigger="hover"
                                    data-content="<%= t('properties.popover_description_en_body') %>"
                                    title="<%= t('properties.popover_description_title') %>">
                                <i class="fas fa-info-circle"></i>
                              </span>
                            <% end %>
                            <%= property.text_area :description_en,
                                                   class: 'form-control',
                                                   id: 'description',
                                                   autocomplete: 'off',
                                                   'rows': '5' %>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.description_en_feedback_html') %></small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div><!-- /.row -->

                        <hr class="my-4" />

                      <% end %>

                      <div class="row">
                        <!-- Notes -->
                        <div class="col-md-12 form-field-container notes">
                          <div class="form-group mb-4">
                            <%= property.label :notes do %>
                              <span><%= t('activerecord.attributes.property.notes_title') %></span>&nbsp;
                              <span class="property-cover-popover"
                                    data-toggle="popover"
                                    data-placement="top"
                                    data-trigger="hover"
                                    data-content="<%= t('properties.popover_notes_body') %>"
                                    title="<%= t('properties.popover_notes_title') %>">
                                <i class="fas fa-info-circle"></i>
                              </span>
                            <% end %>
                            <%= property.text_area :notes,
                                                   class: 'form-control',
                                                   id: 'notes',
                                                   autocomplete: 'off',
                                                   'rows': '3' %>
                            <small class="form-text text-muted"><%= t('activerecord.attributes.property.notes_feedback_html') %>
                            </small>
                            <div class="invalid-feedback"></div>
                          </div>
                        </div>
                      </div><!-- /.row -->


                      <hr class="mt-5">
                      <div class="d-flex">
                        <button type="button" class="prev btn btn-secondary" data-validate="fieldset-2"><%= t('js.forms.properties.wizard.previous') %></button>
                        <button type="button" class="next btn btn-primary ml-auto" data-validate="fieldset-2"><%= t('js.forms.properties.wizard.next') %></button>
                      </div>

                    </fieldset><!-- /fieldset -->
                  </div><!-- Step 2 END-->

                  <!-- Step 3 START -->
                  <div id="test-l-3" class="content dstepper-none fade">
                    <!-- fieldset -->
                    <fieldset>
                      <div class="row">
                        <div class="col-12">
                          <legend class="property-add-edit-title"><%= t('js.forms.properties.wizard.step3.title') %></legend> <!-- .row -->
                        </div>
                      </div>
                      <div class="multivalue-checkboxes">
                        <div class="form-row justify-content-center">
                          <% %w(housetype heating view other access power slope zone).each do |category| %>

                            <div class="form-group-container <%= category.to_s %>">
                              <div class="form-group bottom-corner-separator">

                                <label class="control-label checkbox-header app-checkbox">
                                  <span class="callout-header">
                                    <span class="pin-title font-weight-bold"><%= t("activerecord.attributes.extra.#{category}.title") %></span>
                                  </span>
                                </label>

                                <div class="col-md-12">
                                  <%= property.collection_check_boxes :extra_ids, Extra.order(:id).where(subtype: category), :id, :name do |b| %>
                                    <div class="form-field-container <%= b.text.to_s %>">
                                      <div class="custom-control custom-checkbox app-checkbox">
                                        <%= b.check_box({ class: "custom-control-input", type: 'checkbox' }) %>
                                        <%= b.label({ class: 'custom-control-label' }) do %>
                                          <%= t("activerecord.attributes.extra.#{category}.#{b.text}") %>
                                        <% end %>
                                      </div>
                                    </div>
                                  <% end %>
                                </div>
                              </div>
                            </div>
                          <% end %>
                        </div>

                        <hr />

                        <div class="form-row justify-content-center">
                        <div class="col-md-12">
                            <div class="form-row form-group justify-content-center">

                              <%= property.collection_check_boxes :extra_ids, Extra.where(subtype: 'dependent'), :id, :name do |b| %>
                                <div class="custom-control custom-checkbox app-checkbox m-2">
                                  <div>
                                    <%= b.check_box({ class: "custom-control-input dependent_check", type: 'checkbox' }) %>
                                    <%= b.label({ class: 'custom-control-label dependent_label' }) do %>
                                      <%= t("activerecord.attributes.extra.dependent.#{b.text}") %>
                                    <% end %>
                                  </div>
                                  <div class="mt-1">
                                    <% if current_account.greek? %>
                                      <input type="number" name="property[<%= b.text %>_space]" class="form-control custom-control-label dependent_input" placeholder="<%= t("activerecord.attributes.extra.dependent.#{b.text}_placeholder") %>">
                                    <% else %>
                                      <input type="number" name="property[<%= b.text %>_space]" class="form-control custom-control-label dependent_input" placeholder="<%= t("activerecord.attributes.extra.dependent.#{b.text}_placeholder_footage") %>">
                                    <% end %>
                                  </div>
                                </div>
                              <% end %>

                            </div>
                          </div>

                        </div>
                      </div>

                      <hr class="mt-5">
                      <div class="d-flex">
                        <button type="button" class="prev btn btn-secondary" data-validate="fieldset-3"><%= t('js.forms.properties.wizard.previous') %></button>
                        <button type="button" class="next btn btn-primary ml-auto" data-validate="fieldset-3"><%= t('js.forms.properties.wizard.next') %></button>
                      </div>
                    </fieldset><!-- /fieldset -->
                  </div><!-- Step 3 END -->


                  <!-- Step 4 START -->
                  <div id="test-l-4" class="content dstepper-none fade">
                    <!-- fieldset -->
                    <fieldset>
                      <div class="row">
                        <legend class="property-add-edit-title"><%= t('js.forms.properties.wizard.step4.title') %></legend> <!-- .row -->
                      </div>
                      <div class="row">
                      <div class="col-12 col-lg-6">
                        <div class="col-md-12 col-sm-12">
                          <div class="form-group mb-4">
                            <%= property.label :location do %>
                              <%= content_tag(:i, nil, class: 'fas fa-map fa-fw') + ' ' + t('activerecord.attributes.property.location') %>
                              <abbr title="<%= t('js.components.select.required') %>">*</abbr>
                            <% end %>

                            <!-- Greek Market -->
                            <% if current_account.greek? %>
                              <%= react_component('FormSelect', props: {
                                id: 'f',
                                inputID: 'property_locationid',
                                inputName: 'property[locationid]',
                                inputClassName: 'form-control',
                                validatorGroup: 'fieldset-4',
                                endpoint: properties_locations_path,
                                isRequired: current_account.greek?,
                                renderFormField: true,
                                formID: 'new_property',
                                className: 'simple-select',
                                isSearchable: true,
                                isClearable: true,
                                isCreatable: false,
                                soloMode: true,
                                ajaxEnabled: true,
                                accountFlavor: current_account.flavor,
                                i18n: {
                                    select: t('js.components.select'),
                                    validatorErrMsg: t('js.validator.required'),
                                }
                            }, prerender: false) %>
                            <!-- International Market -->
                            <% else %>
                              <%= react_component('FormSelect', props: {
                                id: 'ff',
                                inputID: 'property_ilocationid',
                                inputName: 'property[ilocationid]',
                                inputClassName: 'form-control',
                                validatorGroup: 'fieldset-4',
                                endpoint: properties_ilocations_path,
                                create_new_entity_form: new_ilocation_path,
                                isRequired: current_account.international?,
                                renderFormField: true,
                                formID: 'new_property',
                                className: 'simple-select',
                                isSearchable: true,
                                isClearable: true,
                                isCreatable: true,
                                soloMode: true,
                                ajaxEnabled: true,
                                accountFlavor: current_account.flavor,
                                i18n: {
                                  select: t('js.components.select'),
                                  validatorErrMsg: t('js.validator.required'),
                                }
                              }, prerender: false) %>
                            <% end %>
                          </div>
                        </div>

                        <%= property.hidden_field :lat %>
                        <%= property.hidden_field :lng %>

                        <hr />

                        <div class="col-md-12 col-sm-12">
                          <%= property.label :marker do %>
                            <%= content_tag(:i, nil, class: 'fas fa-map-marker-alt fa-fw') + ' ' + Property.human_attribute_name(:marker) %>
                            <abbr title="<%= t('js.components.select.conditional_required') %>">**</abbr>
                          <% end %>
                          <%= react_component('FormSelect', props: {
                            id: 'a',
                            inputID: 'property_marker',
                            inputName: 'property[marker]',
                            inputClassName: 'form-control',
                            validatorGroup: 'fieldset-4',
                            isRequired: !!(@property.lat && @property.lng && @property.address),
                            renderFormField: true,
                            formID: "edit_property_#{@property.id}",
                            className: 'simple-select',
                            options: Property.markers.keys.collect { |marker| { label: Property.human_enum_name(:marker, marker), value: marker } },
                            soloMode: true,
                            ajaxEnabled: false,
                            isClearable: true,
                            backspaceRemovesValue: true,
                            isSearchable: false,
                            feedback: t('js.forms.properties.wizard.step4.type_of_marker_feedback'),
                            i18n: {
                              select: t('js.components.select'),
                              validatorErrMsg: t('js.validator.required'),
                            }
                          }, prerender: false) %>
                        </div>
                      </div>

                      <div class="col-12 col-lg-6 pb-2">
                        <div class="col-md-12">
                          <div id="map"
                               data-search-prompt="<%= t('js.forms.properties.wizard.step4.search_location_prompt') %>"
                               data-brand="<%= BRANDNAME %>"
                               data-environment="<%= Rails.env %>"
                               data-account-flavor="<%= current_account.flavor %>"></div>
                        </div>

                        <!-- Address -->
                        <%= property.hidden_field :address %>

                      </div>

                      </div>

                      <hr class="mt-5">
                      <div class="d-flex">
                        <button type="button" class="prev btn btn-secondary" data-validate="fieldset-4"><%= t('js.forms.properties.wizard.previous') %></button>
                        <button type="button" class="next btn btn-primary ml-auto" data-validate="fieldset-4"><%= t('js.forms.properties.wizard.next') %></button>
                      </div>
                    </fieldset><!-- /fieldset -->
                  </div><!-- Step 4 END -->

                  <!-- Step 5 START -->
                  <div id="test-l-5" class="content dstepper-none fade">
                    <!-- fieldset -->
                    <fieldset>
                      <div class="row">
                        <div class="col-12">
                          <legend class="property-add-edit-title"><%= t('js.forms.properties.wizard.step5.title') %></legend> <!-- .row -->
                        </div>
                      </div>

                      <div class="row">
                        <div class="col-8 offset-2">
                          <div class="alert alert-primary has-icon" role="alert">
                            <div class="alert-icon">
                              <i class="fas fa-info"></i>
                            </div><%= t('js.forms.properties.wizard.step5.subtitle') %>
                          </div>
                        </div>
                      </div>

                      <div class="row">
                        <div class="col-md-8 offset-md-2 col-sm-12">
                          <div class="form-group mt-4 mb-4 existing_client">
                            <%= property.label :owner do %>
                              <%= content_tag(:i, nil, class: 'fas fa-user fa-fw') + ' ' + t('activerecord.attributes.property.owner') %>&nbsp;&nbsp;<span class="property-cover-popover" data-toggle="popover" data-placement="top" data-trigger="hover" data-content="<%= t('properties.popover_houseowner_' + current_user.role(current_account)) %>" title="<%= t('properties.popover_houseowner_title') %>"><i class="fas fa-info-circle"></i></span>
                            <% end %>
                            <%= react_component('FormSelect', props: {
                                id: 'd',
                                inputID: 'property_clients',
                                inputName: 'property[clients]',
                                inputIsDisabled: false,
                                inputClassName: 'form-control existing_client_input',
                                validatorGroup: 'fieldset-5',
                                endpoint: properties_clients_path,
                                create_new_entity_form: new_client_path,
                                isRequired: false,
                                renderFormField: true,
                                formID: 'new_property',
                                className: 'simple-select ',
                                isDisabled: false,
                                isSearchable: true,
                                isClearable: true,
                                isMulti: true,
                                isCreatable: true,
                                soloMode: true,
                                ajaxEnabled: true,
                                i18n: {
                                    select: t('js.components.select'),
                                    validatorErrMsg: t('js.validator.required'),
                                    modal_title: t('clients.new.owner_profile')
                                }
                            }, prerender: false) %>
                          </div><!-- /.form-group -->
                        </div>
                      </div>


                      <hr class="mt-5">
                      <div class="d-flex">
                        <button type="button" class="prev btn btn-secondary" data-validate="fieldset-5"><%= t('js.forms.properties.wizard.previous') %></button>
                        <button type="button" class="next btn btn-primary ml-auto" data-validate="fieldset-5"><%= t('js.forms.properties.wizard.next') %></button>
                      </div>

                    </fieldset> <!-- /fieldset -->
                  </div> <!-- Step 5 END -->

                  <!-- Step 6 START [Optional] -->
                  <% if @property.custom_fields_count > 0 %>
                    <!-- Custom fields -->
                    <div id="test-l-6" class="content dstepper-none fade">
                      <fieldset>
                        <div class="col-12">
                          <legend class="property-add-edit-title"><%= t('js.forms.properties.wizard.step7.title') %></legend> <!-- .row -->
                        </div>
                        <div class="row mb-3">
                          <%#= property.hidden_field :model_type_id %>
                          <%= property.fields_for :preferences do |builder| %>
                            <% @property.model_type.fields.each do |field| %>
                              <%= render "accounts/cfields/#{field.field_type}", field: field, f: builder, vgroup: 'fieldset-6' %>
                            <% end %>
                          <% end %>
                        </div>
                        <hr class="mt-5">
                        <div class="d-flex">
                          <button type="button" class="prev btn btn-secondary" data-validate="fieldset-6"><%= t('js.forms.properties.wizard.previous') %></button>
                          <button type="button" class="next btn btn-primary ml-auto" data-validate="fieldset-6"><%= t('js.forms.properties.wizard.next') %></button>
                        </div>
                      </fieldset>
                    </div>
                  <% end %>
                    <!-- Step 6 END -->

                  <!-- Step 6/7 START -->
                  <div id="test-l-<%= @property.custom_fields_count > 0 ? '7' : '6' %>" class="content dstepper-none fade">
                    <!-- fieldset -->
                    <fieldset>
                      <div class="col-12">
                        <legend class="property-add-edit-title"><%= t('js.forms.properties.wizard.step6.title') %></legend> <!-- .row -->
                      </div>
                      <div class="row mb-3">

                        <div class="user-avatar property-avatar-xl fileinput-button">
                          <div class="fileinput-button-label"><%= t('properties.new.set_cover') %></div>
                          <div id="avatar-wrapper">
                            <%= render_avatar(property.object, 'tile-xl img-fit-contain tile-square', "avatar_preview") %>
                          </div>
                          <%= property.file_field :avatar, id: "avatar_upload", class: 'form-control file-emitters', title: t('properties.new.avatar_title'), multiple: false, direct_upload: true %>
                        </div><!-- /avatar -->
                        <!-- .media-body -->
                        <div class="media-body pl-3">
                          <h3 class="card-title text-left"><%= t('properties.new.photo_header') %>&nbsp;<span class="property-cover-popover" data-trigger="hover" data-toggle="popover" data-placement="top" data-content="<%= t('properties.popover_avatar') %>" title="<%= t('properties.popover_avatar_title') %>"><i class="fas fa-info-circle"></i></span>
                          </h3>
                          <h6 class="card-subtitle text-muted"><%= t('properties.new.photo_subheader') %></h6>
                          <p class="card-text">
                            <% if property.object.avatar.attached? %>
                              <%= link_to delete_avatar_user_url, method: :delete, data: { confirm: t('users.edit.delete_avatar') } do %>
                                <i class="fa fa-trash fa-fw"></i>&nbsp;|&nbsp;<small><%= t('users.edit.allowed_pic_specs') %></small>
                                <br /><span id="property-avatar-spinner">&nbsp;<i class="fas fa-cog fa-spin"> </i></span>
                              <% end %>
                            <% else %>
                              <small><%= t('users.edit.allowed_pic_specs') %></small>
                              <br /><span id="property-avatar-spinner">&nbsp;<i class="fas fa-cog fa-spin"> </i></span>
                            <% end %>
                          </p><!-- The avatar upload progress bar -->

                        </div><!-- /.media-body -->

                      </div>
                      <div class="row">
                        <hr class="mt-5" />

                        <div class="d-flex flex-column flex-grow-1 justify-content-center">
                          <%= content_tag :div, class: "", id: "uppy", data: {
                              i18n: {
                                  uppy: t('js.uppy'),
                              },
                              uppy_url_listener: new_property_path
                          } do %>
                          <% end %>
                        </div>
                      </div>

                      <hr class="mt-5">
                      <div class="d-flex">
                        <% if @property.custom_fields_count > 0 %>
                          <button type="button" class="prev btn btn-secondary" data-validate="fieldset-7"><%= t('js.forms.properties.wizard.previous') %></button>
                          <%= property.submit t('properties.new.add_button'), class: 'btn btn-primary ml-auto submit validatable-form-submit-element', "data-validate": "fieldset-7" %>
                        <% else  %>
                          <button type="button" class="prev btn btn-secondary" data-validate="fieldset-6"><%= t('js.forms.properties.wizard.previous') %></button>
                          <%= property.submit t('properties.new.add_button'), class: 'btn btn-primary ml-auto submit validatable-form-submit-element', "data-validate": "fieldset-6" %>
                        <% end %>
                      </div>

                    </fieldset><!-- /fieldset -->
                  </div><!-- Step 6/7 END -->

                  <input id="preventformsubmit" type="hidden">
                  <!-- .emitters among other things serves as a signal to initialize ActiveStorage-->
                  <%= property.file_field :images, class: 'form-control uppy-emitters', multiple: true, direct_upload: true %>
                  <%= render "accounts/helpers/property_filters" %>

                <% end %> <!-- /form -->
              </div>
            </div><!-- /.card-body -->
          </div><!-- /.card -->
        </div><!-- /.bs-stepper -->
        <!-- toasts container -->
        <div aria-live="polite" aria-atomic="true">
          <!-- Position it -->
          <div style="position: fixed; top: 4.5rem; right: 1rem; z-index: 1050">
            <!-- .toast -->
            <div id="submitfeedback" class="toast bg-dark border-dark text-light fade hide" data-delay="3000" role="alert" aria-live="assertive" aria-atomic="true">
              <div class="toast-header bg-primary text-white"> See your browser console</div>
              <div class="toast-body">
                <strong>Congrats!</strong> You see the submit feedback.
              </div>
            </div><!-- /.toast -->
          </div>
        </div><!-- /toasts container -->

      </div>
    </div>
  </div>

</div>
