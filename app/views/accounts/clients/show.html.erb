<% provide(:title, t('clients.show.heading')) %>
<%#= render partial: 'layouts/breadcrumb', locals: {path: [{:title => t('users.show.breadcrumb'), :href => users_path}, {title: @user.full_name, :href => ''}], icon: 'house-colored'} %>

<%= render layout: 'layouts/breadcrumb', locals: {path: [{:title => t('clients.show.breadcrumb'), :href => clients_path}, {title: @client.full_name, :href => ''}], icon: 'house-colored'} do %>
  <div class="action-btns">
    <div class="btn-group btn-group-toggle">
      <% if current_user.is_admin?(current_account) || current_user.clients.pluck(:id).include?(@client.id) %>
        <div class="reactstrap-modal-button-right">
        <%= react_component('ModalContainer', props: {
            id: 'client-showings',
            originator: 'client',
            closeMenuOnSelect: true,
            openMenuOnClick: true,
            scrollable: true,
            modalSize: 'lg',
            fireButtonLabel: '<i class="fas fa-eye colored fa-fw"></i><span class="d-none d-lg-inline">&nbsp;' + t('properties.viewings') + '</span>',
            #avatar: @property.avatar.attached? ? url_for(@property.avatar.variant(resize: "30%")) : nil,
            avatar: nil,
            showings_url: showings_url,
            client_id: @client.id,
            child: 'AddRemoveShowings', # Due to react-on-rails restrictions we can't just ask to render children
            modalTitle: t('properties.viewings_history', entity: "#{@client.first_name.capitalize} #{@client.last_name.capitalize}"),
            modalHelpPopover: t("clients.help_popover_#{current_user.role(current_account)}"),
            #modalHeader: heading(@property),
            buttonOKLabel: t('properties.ok_button'),
            buttonCancelLabel: t('properties.cancel_button'),
            buttonCloseLabel: t('properties.close_button'),
            soloMode: true,
            ajaxEnabled: false,
            isClearable: true,
            backspaceRemovesValue: true,
            isSearchable: false,
            feedback: t('js.forms.properties.wizard.step1.type_of_offer_feedback'),
            clients_url: clients_url,
            properties_url: properties_inlinesearch_url,
            partners_url: "#{users_url}?backend_option=all_",
            isAdmin: current_user.is_admin?(current_account),
            i18n: {
                table: {
                    client: t('viewings.client'),
                    property: t('viewings.property'),
                    user: t('viewings.user'),
                    date_title: t('date_title'),
                    add: t("viewings.add_btn"),
                    actions: t("viewings.actions"),
                    tooltip_delete: t('tooltips.delete'),
                    delete_prompt: t('viewings.delete_prompt')
                },
                form: {
                    title: t('viewings.add'),
                    property: t('properties.property'),
                    partner: t('users.user'),
                    date: t('viewings.date'),
                    submit: t('viewings.submit'),
                    warning: t('viewings.empty_fields_msg'),
                    list: t('viewings.list'),
                    required: t('js.components.select.required'),
                    comments: t('viewings.comments'),
                    comments_placeholder: t('viewings.comments_placeholder'),
                    comments_feedback: t('viewings.comments_feedback')
                },
                select: {
                    placeholder: t('js.components.select.placeholder_title'),
                    noresults: t('js.components.select.noresults'),
                    loading: t('js.components.select.loading_html'),
                    feedback: 'yolo'
                },
                no_lists_available: t('js.components.modal.favlists.no_results'),
                property_cover_alt: t('js.components.modal.favlists.property_cover_alt'),
                add_list_action: t('js.components.modal.favlists.add_list_action'),
                loading_alt: t('js.components.modal.favlists.loading_alt'),
                listname_placeholder: t('js.components.modal.favlists.listname_placeholder')
            }}) %>
        </div>
        <% if current_user.is_admin?(current_account) %>
          <div class="reactstrap-modal-button-x">
            <%= react_component('ModalContainer', props: {
              id: 'assignment',
              modalSize: 'md',
              fireButtonLabel: '<i class="fas fa-user-check colored fa-fw"></i><span class="d-none d-lg-inline">&nbsp;' + t('activerecord.attributes.property.assignments_title') + '</span>',
              avatar: nil,
              hasFeedback: true,
              modalBodyClassNames: 'overflown',
              modalFooterClassNames: 'overflown',
              modalContentClassNames: 'overflown',
              scrollable: false,
              property_id: @client.id,
              child: 'AddRemovePartners', # Due to react-on-rails restrictions we cant just ask to render children
              modalTitle: t('assignments.client_title', entity: @client.full_name),
              modalHeader: nil,
              buttonCancelLabel: t('properties.cancel_button'),
              buttonCloseLabel: t('properties.close_button'),
              soloMode: true,
              ajaxEnabled: false,
              isClearable: false,
              backspaceRemovesValue: true,
              isSearchable: false,
              isMultiple: true,
              partners_url: users_url,
              partners_action_endpoint: clientships_path(@client),
              initial_data_url: existing_clientships_path(@client),
              openMenuOnClick: true,
              closeMenuOnSelect: false,
              defaultOptions: current_account.users.blank? ? nil : current_account.users.order(created_at: :asc).last(8).map { |user| {label: "#{user.first_name} #{user.last_name}", value: user.id} },
                  # [{ value: 'chocolate', label: 'Chocolate' },
                  # { value: 'strawberry', label: 'Strawberry' },
                  # { value: 'vanilla', label: 'Vanilla' }],
              i18n: {
                select: {
                  placeholder: t('js.components.select.placeholder_title'),
                  noresults: t('js.components.select.noresults'),
                  loading: t('js.components.select.loading_html'),
                  feedback: t('js.components.select.assignments_client_feedback', client_name: @client.full_name),
                  # defaultOptions: current_account.users.last(5).reverse.count

                }
              }
            }, prerender: false) %>
          </div>
        <% end %>
        <%= link_to edit_client_path(@client), class: 'btn btn-secondary btn-sm editable' do %>
          <i class="fas fa-pen colored fa-fw"></i>
          <span class="d-none d-lg-inline">&nbsp;<%= t 'properties.edit.edit_button_alt' %></span>
        <% end %>
      <% end %>
      <% if current_user.is_admin?(current_account) %>
        <%= link_to @client, method: :delete, data: {confirm: t('prompt')}, class: 'btn btn-secondary btn-sm editable' do %>
          <i class="fas fa-trash colored fa-fw"></i>
          <span class="d-none d-lg-inline">&nbsp;<%= t 'properties.delete.delete_button' %></span>
        <% end %>
      <% end %>


    </div>

  </div>
<% end %>

<div class="page-container">
  <div class="container">
    <div class="app-container">

      <!-- .card -->
      <div class="card card-fluid">

        <div class="card-header card-header-custom">
          <div class="row align-items-center">
            <div class="col-lg-2 d-none d-lg-block card-start-heading">
              <%= link_to clients_path, class: "btn btn-primary btn-warning navigation-btn" do %>
                <i class="fas fa-chevron-left fa-fw"></i><%= t('properties.show.back') %>
              <% end %>
            </div>
            <div class="col-lg-8 text-center flex-nowrap">
              <nav class="nav nav-tabs nav-justified border-0 d-flex justify-content-center text-nowrap ">
                <a href="#info" class="nav-link custom active text-nowrap" data-toggle="tab" role="tab" aria-selected="true"><i class="menu-icon fas fa-user fa-fw"></i><span class="d-none d-md-inline tab-text">&nbsp; <%= t('clients.show.tabs.info') %></span></a>
                <a href="#searching" class="nav-link custom " data-toggle="tab" role="tab" aria-selected="false"><i class="menu-icon fas fa-search fa-fw"></i><span class="d-none d-md-inline tab-text">&nbsp; <%= t('clients.show.tabs.searching') %></span>
                </a>
                <a href="#offering" class="nav-link custom " data-toggle="tab" role="tab" aria-selected="false"><i class="menu-icon fas fa-home fa-fw"></i><span class="d-none d-md-inline tab-text">&nbsp; <%= t('clients.show.tabs.offering') %></span>
                </a>
              </nav><!-- /.nav -->
            </div>


            <div class="col-lg-2 card-end-heading">
              <a class="btn btn-primary navigation-btn" href="#"><i class="fas fa-th-large fa-fw"></i></a></div>
          </div>
        </div>


        <!-- .card-body -->
        <div class="card-body">

          <div class="tab-content p-0" id="ClientContent">
            <!-- Tab 1 - Client info-->
            <div class="tab-pane fade show active" id="info" role="tabpanel" aria-labelledby="info-tab">
              <div class="col-lg-6 offset-lg-3 col-md-12">
                <div class="media mb-3">
                  <div class="user-avatar user-avatar-xl fileinput-button">
                    <%= render_avatar(@client, 'tile-xl', "avatar_preview") %>
                  </div><!-- /avatar -->
                  <div class="media-body pl-3 pt-3">
                    <strong><%= @client.full_name %></strong><br/><%= raw content_tag(:i, @client.job).html_safe unless @client.job.blank? %>
                  </div>
                </div> <!-- /.media -->
              </div>

              <div class="row">
                <div class="col-lg-6 offset-lg-3 col-md-12">

                  <!-- If case things get too slow... -->
                  <%#= react_component('TabWrapper', props: {base_path: client_path(@client)}) %>

                  <div class="table-responsive">
                    <!-- .table -->
                    <table class="table table-striped">
                      <tbody>
                      <tr>
                        <td><%= t('activerecord.attributes.client.first_name') %></td>
                        <td><%= @client.first_name %></td>
                      </tr>
                      <tr>
                        <td><%= t('activerecord.attributes.client.last_name') %></td>
                        <td><%= @client.last_name %></td>
                      </tr>
                      <tr>
                        <td><%= t('activerecord.attributes.client.job') %></td>
                        <td><%= @client.job.blank? ? '-' : @client.job %></td>
                      </tr>
                      <tr>
                        <td><%= t('activerecord.attributes.client.email') %></td>
                        <td><%= @client.email.blank? ? '-' : @client.email %></td>
                      </tr>
                      <tr>
                        <td><%= t('activerecord.attributes.client.telephones') %></td>
                        <td><%= @client.telephones.blank? ? '-' : @client.telephones %></td>
                      </tr>
                      <tr>
                        <td><%= t('activerecord.attributes.client.registered') %></td>
                        <!-- +l+ function accounts for the localized timedate -->
                        <td><%= l(@client.created_at, format: :custom) %></td>
                      </tr>
                      <tr>
                        <td><%= t('clients.show.ordertoview') %></td>
                        <td><%= t(@client.ordertoview.to_s.downcase) %>&nbsp;<%= (@client.try(:ordertoviewfile).try(:attached?) && @client.ordertoview) ? link_to('&#10515'.html_safe, rails_blob_path(@client.ordertoviewfile, disposition: "attachment"), class: 'no-underline') : '' %></td>
                      </tr>
                      <tr>
                        <td><%= t('clients.show.ordertosell') %></td>
                        <td><%= t(@client.ordertosell.to_s.downcase) %>&nbsp;<%= (@client.try(:ordertosellfile).try(:attached?) && @client.ordertosell) ? link_to('&#10515'.html_safe, rails_blob_path(@client.ordertosellfile, disposition: "attachment"), class: 'no-underline') : '' %></td>
                      </tr>

                      <% @client.model_type.fields.each do |field| %>
                        <%= render "accounts/cfields/#{field.field_type}_read",
                                   cfield_label: field.name,
                                   cfield_data: @client.preferences[field.slug] %>
                      <% end %>

                      </tbody>
                    </table>
                  </div>
                </div>

              </div>


            </div>
            <div class="tab-pane fade" id="searching" role="tabpanel" aria-labelledby="subscription-tab">
              <% unless @client.searchprefs.blank? %>
                <div class="row pt-1 pl-2 d-flex justify-content-center">
                  <div class="btn-group btn-group-toggle">
                    <div class="reactstrap-modal-button">
                      <%= react_component('ModalContainer', props: {
                          id: 'modal-window-saved-prefs',
                          title: t('clients.show.search_prefs'),
                          outline: true,
                          # fireButtonLabel: '<i class="fas fa-info fa-fw"></i>&nbsp;' + t('clients.show.search_prefs'),
                          fireButtonLabel: '<i class="fas fa-search fa-fw"></i>',
                          fireButtonBtnType: 'primary',
                          fireButtonBtnSize: 'md',
                          avatar: nil,
                          child: 'RetrieveClientSearch',
                          modalTitle: t('js.components.modal.search_save.title_alt'),
                          modalHeader: t('js.components.modal.search_save.subtitle'),
                          buttonOKLabel: t('properties.ok_button'),
                          buttonCancelLabel: t('properties.cancel_button'),
                          buttonCloseLabel: t('properties.close_button'),
                          soloMode: true,
                          searchprefs: @client.searchprefs,
                          ajaxEnabled: true,
                          isClearable: true,
                          buttonDisabled: @client.searchprefs.blank?,
                          backspaceRemovesValue: true,
                          isSearchable: true,
                          i18nPriceOptions: price_options,
                          i18nSizeOptions: size_options,
                          i18nFloorOptions: floors_options,
                          i18nCategoryOptions: category_options,
                          i18nCfieldOptions: cfields_options,
                          feedback: t('js.forms.properties.wizard.step1.type_of_offer_feedback'),
                          i18n: {
                              search_save_filters: t('js.components.modal.search_save.filters'),
                              search_save_subtitle: t('js.components.modal.search_save.header', client_name: @client.full_name),
                              no_lists_available: t('js.components.modal.favlists.no_results'),
                              search_save_criteria: t('js.components.modal.search_save.criteria'),
                              property_cover_alt: t('js.components.modal.favlists.property_cover_alt'),
                              add_list_action: t('js.components.modal.favlists.add_list_action'),
                              loading_alt: t('js.components.modal.favlists.loading_alt'),
                              listname_placeholder: t('js.components.modal.favlists.listname_placeholder')
                          }
                      }, prerender: false) %>
                    </div>
                    <a data-toggle="tooltip" data-position="top" title="<%= t('clients.show.edit_search_tooltip') %>" class="btn btn-md btn-outline-primary btn-action <%= @client.searchprefs.blank? ? 'disabled' : '' %>" href="<%= "#{properties_path}?#{@client.searchprefs}" %>">
                      <i class="fas fa-pen fa-fw orig"></i>
                    </a>
                  </div>

                </div>
                <hr class="hr-text" data-content="&#9672;&nbsp; <%= t('clients.show.matches') %> &nbsp;&#9672;">
                <%= react_component('ClientPrefsListWithDatatable', props: {
                    initial_payload: {
                        dataset_wrapper: @propertieslist,
                        results_per_page: @results_per_page,
                        total_entries: @total_entries,
                        current_page: @current_page,
                        initial_search: @initial_search,
                        initial_sorting: @initial_sorting,
                        initial_ordering: @initial_ordering,
                        locations_endpoint: properties_locations_url,
                        clients_endpoint: clients_url,
                        client_endpoint: client_path(@client),
                        assignmentships_endpoint: matches_url,
                        properties_path: properties_path,
                        hasFeedback: false,
                        object_type: 'clientprefslist'
                    },
                    i18n: {
                        no_results: t('js.components.select.noresults'),
                    }
                }, prerender: false) %>
              <% else %>
                <div class="d-flex justify-content-center">
                  <p class="text-justify font-italic mb-4 max-300">
                    <span><%= t('clients.show.no_stored_searches_html', properties_path: properties_path) %></span></p>
                </div>
                <div class="text-center">
                  <%= image_pack_tag 'media/images/no_stored_searches.svg', class: "img-fluid max-300" %>
                </div>
              <% end %>
            </div>

            <div class="tab-pane fade" id="offering" role="tabpanel" aria-labelledby="integrations-tab">
              <div class="row">
                <div class="col-lg-6 col-12 offset-lg-3">
                  <% properties = @client.properties.references(:cpas).where(cpas: {ownership: true}) %>
                  <% if properties.length > 0 %>
                    <div class="list-group custom list-group-bordered mb-3">
                      <% properties.map do |property| %>
                        <a href="<%= property_path(property) %>" class="list-group-item list-group-item-action">
                          <div class="list-group-item-figure">
                            <div class="tile bg-success">
                              <i class="fas fa-home fa-fw"></i>
                              <!--                          <span class="oi oi-house"></span>-->
                            </div>
                          </div>
                          <div class="list-group-item-body"><strong><%= property.slug.upcase %></strong>
                            - <%= property.category.localname %>
                            - <%= number_to_currency(property.price) %></div>
                        </a>
                      <% end %>
                    </div>
                  <% else %>
                    <div class="d-flex justify-content-center">
                      <p class="text-justify font-italic mb-4 max-300">
                        <span><%= t('clients.show.no_ownership') %></span></p>
                    </div>
                    <div class="text-center">
                      <%= image_pack_tag 'media/images/no_stored_searches.svg', class: "img-fluid max-300" %>
                    </div>

                  <% end %>
                </div>
              </div>
            </div>

          </div> <!-- /.card-body -->
        </div> <!-- /.card -->


      </div>
      <%= render "accounts/helpers/locale" %>
    </div>
  </div>
</div>